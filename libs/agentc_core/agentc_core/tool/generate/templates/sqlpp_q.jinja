import couchbase.auth
import couchbase.options
import couchbase.cluster
import logging
import dataclasses
import typing

from agentc_core.tool import tool
from agentc_core.secrets import get_secret

logger = logging.getLogger(__name__)


def _get_couchbase_cluster() -> couchbase.cluster.Cluster:
    authenticator = couchbase.auth.PasswordAuthenticator(
        username=get_secret("{{ secrets.username }}").get_secret_value(),
        password=get_secret("{{ secrets.password }}").get_secret_value(),
        {% if secrets.certificate is not none %}cert_path=get_secret("{{ secrets.certificate | safe }}").get_secret_value(){% endif %}
    )
    conn_string = get_secret("{{ secrets.conn_string }}").get_secret_value()
    return couchbase.cluster.Cluster(conn_string, couchbase.options.ClusterOptions(authenticator))


@tool
def {{ tool.name }}(**kwargs):
    """
    {{ tool.description }}
    """
    logger.debug("{{ tool.name }} has been called.")
    cluster = _get_couchbase_cluster()
    query_results = cluster.query(
        """ {{ query | safe }} """,
        couchbase.options.QueryOptions(named_parameters=kwargs)
    )

    tool_results = []
    for result in query_results:
        tool_results.append(result)
    logger.debug("{{ tool.name }} has returned the following: " + str(tool_results))
    return tool_results

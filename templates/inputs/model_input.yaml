#
# The following file is a template for a model input.
#
record_kind: model_input

# The name of the model input must be a valid Python identifier (e.g., no spaces).
# This field is mandatory, and will be used when searching for model inputs by name.
name: route_finding_agent

# A description of the model input's purpose (e.g., where this model input will be used).
# This field is mandatory, and will be used (indirectly) when performing semantic search for model inputs.
description: >
  Instructions on how to find routes between two specific airports.

# As a supplement to the description similarity search, users can optionally specify search annotations.
# The values of these annotations MUST be strings (e.g., not 'true', but '"true"').
# This field is optional, and does not have to be present.
annotations:
  organization: "sequoia"

# The input to an LLM will _generally_ (more often than not) be accompanied by a small collection of tools.
# This field is used at provider time to search the catalog for tools.
# This field is optional, and does not have to be present.
tools:
  # Tools can be specified using the same parameters found in Catalog.get("tool", ...).
  # For instance, we can condition on the tool name...
  - name: "find_indirect_routes"

  # ...the tool name and some annotations...
  - name: "find_direct_routes"
    annotations: gdpr_2016_compliant = "true"

  # ...or even a semantic search via the tool description.
  - query: "finding flights by name"
    limit: 2

# The output type (expressed in JSON-schema) associated with this model-input.
# See https://json-schema.org/understanding-json-schema for more information.
# This field is commonly supplied to an LLM to generate structured responses.
# This field is optional, and does not have to be present.
output:
  type: object
  properties:
    source:
      type: string
      description: "The IATA code for the source airport."
    dest:
      type: string
      description: "The IATA code for the destination airport."

# The textual input to the model.
# This can either be a single string or an arbitrarily nested dictionary.
# Below, we provide an example of a nested dictionary.
content:
  Goal:
    Your goal is to find a sequence of routes between the source and destination airport.

  Examples:
    ...

  Instructions: >
    Try to find a direct routes first between the source airport and the destination airport.
    If there are no direct routes, then find a one-layover route.
    If there are no such routes, then try another source airport that is close.
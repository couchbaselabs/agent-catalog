# To signal to Agent Catalog that this file is a prompt, the 'record_kind' field must be set to 'prompt'.
record_kind: prompt

# The name of the prompt must be a valid Python identifier (e.g., no spaces).
# This field is mandatory, and will be used when searching for prompts by name.
name: front_desk_node

# A description of where this prompt is used.
# This field is mandatory, and will be used (indirectly) when performing semantic search for prompts.
description: >
  All inputs required to assemble the front-desk node.

output:
  title: ResponseOrShouldContinue
  description: The response to the user's input and whether (or not) the conversation should continue.
  type: object
  properties:
    is_last_step:
      type: boolean
      description: "Whether (or not) the conversation should continue."
    response:
      type: string
      description: "The response to the user's input."
    needs_clarification:
      type: boolean
      description: "Whether (or not) the response needs clarification."
  required: [ should_continue, response, needs_clarification ]

# As a supplement to the description similarity search, users can optionally specify search annotations.
# The values of these annotations MUST be strings (e.g., not 'true', but '"true"').
# This field is optional, and does not have to be present.
annotations:
  framework: "langgraph"

# The main content of the prompt.
# This field is mandatory and must be specified as a string OR a YAML object.
content:
  agent_instructions:
    - Be polite!

#    - >
#      Your task is to respond to the user AND decide if the conversation should end based on the user's response.
#      If you have any routes that have been given to by another agent, respond to the user in Markdown illustrating
#      the routes.

#    - >
#      If the user asks for help with flight planning but there are no source and destination cities provided, set the
#      'needs_clarification' field to True and provide a polite response.

#    - >
#      If the user asks / replies with anything not related to flight planning, set the 'is_last_step' field to True and
#      'needs_clarification' to True.
#      DO NOT continue the conversation if the user's input / response is not related to flight planning.
#      For example, the following responses should end the conversation (set 'is_last_step' to True):
#      - I need help with my hotel reservation. ==> is_last_step: True
#      - Can you help me with my car rental? ==> is_last_step: True
#      - I need recommendations for restaurants in the area. ==> is_last_step: True

#    - >
#      If the user wants to end the conversation, set the 'is_last_step' field to True and provide a polite response.
#      For example:
#      - Thanks! That's all I need. ==> is_last_step: True
#      - I'm done for now. ==> is_last_step: True
#      - That's all for today. ==> is_last_step: True

  output_format_instructions: >
    Be polite and professional in your responses. Err on the side of caution when deciding whether to continue the
    conversation. If you are unsure, it is better to **END** the conversation than to continue it.

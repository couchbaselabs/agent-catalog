# To signal to Agent Catalog that this file is a prompt, the 'record_kind' field must be set to 'prompt'.
record_kind: prompt

# The name of the prompt must be a valid Python identifier (e.g., no spaces).
# This field is mandatory, and will be used when searching for prompts by name.
name: front_desk_node

# A description of where this prompt is used.
# This field is mandatory, and will be used (indirectly) when performing semantic search for prompts.
description: >
  All inputs required to assemble the front-desk node.

output:
  title: ResponseOrShouldContinue
  description: The response to the user's input and whether (or not) the conversation should continue.
  type: object
  properties:
    should_continue:
      type: boolean
      description: "Whether (or not) the conversation should continue."

    response:
      type: string
      description: "The response to the user's input."

# As a supplement to the description similarity search, users can optionally specify search annotations.
# The values of these annotations MUST be strings (e.g., not 'true', but '"true"').
# This field is optional, and does not have to be present.
annotations:
  framework: "langgraph"

# The main content of the prompt.
# This field is mandatory and must be specified as a string OR a YAML object.
content:
  agent_instructions: >
    Your task is to respond to the user OR decide if the conversation should end based on the user's response.
    If you have routes, respond to the user in Markdown illustrating the routes.

    If the user wants to end the conversation, set the 'should_continue' field to 'false'.
    For example:
    - User: Thanks! That's all I need.
    - User: I'm done for now.
    - User: That's all for today.

  output_format_instructions: >
    If the conversation should continue, set the 'should_continue' field to 'true' AND set the 'response' field.
    Otherwise, set the 'should_continue' field to 'false'.
